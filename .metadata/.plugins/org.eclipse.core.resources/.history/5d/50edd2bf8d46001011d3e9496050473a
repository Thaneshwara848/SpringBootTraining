package com.example.demo.Controlers;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Repos.MyRepo;
import com.example.demo.modelorEntriy.Employee;
							
@RestController
public class MyControler {
	
	@Autowired
	private MyRepo repo;
	@GetMapping("/getAllEmployee")
	public List<Employee> getAllEmployee()
	{	
		return repo.findAll();
	}
	@GetMapping("/getAllEmployee/{id}")
	public Optional<Employee> getAllEmployeebyID(@PathVariable int id)
	{
		
		return repo.findById(id);
	}
	
	 @PostMapping("addEmployee")
	  public String addEmployee(@RequestBody Employee employee) {
//		 emp.add(employee);
		 repo.save(employee);
	    return "Employee added successfully!";
	 }
	 
	 
	 @PutMapping("/updateEmployee/{id}")
	 public String updateEmployee(@PathVariable int id, @RequestBody Employee updatedEmployee) {
	     Optional<Employee> existingEmp = repo.findById(id);
	     if (existingEmp.isPresent()) {
	         Employee emp = existingEmp.get();
	         emp.setName(updatedEmployee.getName());
	         emp.setAge(updatedEmployee.getAge());
	         emp.setSalary(updatedEmployee.getSalary());
	         emp.setDesig(updatedEmployee.getDesignation());
	         repo.save(emp);
	         return "Employee updated successfully!";
	     } else {
	         return "Employee not found with ID: " + id;
	     }
	 }
	 
	 @DeleteMapping("/deleteEmployee/{id}")
	 public String deleteEmployee(@PathVariable int id) {
	     if (repo.existsById(id)) {
	         repo.deleteById(id);
	         return "Employee deleted successfully!";
	     } else {
	         return "Employee not found with ID: " + id;
	     }
	 }
}